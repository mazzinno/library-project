{"ast":null,"code":"var _jsxFileName = \"/home/abdennacer/Desktop/library-project/src/pages/CategoryBooks.jsx\";\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport BookCard from '../components/BookCard';\nimport BooksData from '../books.json';\nconst CategoryBooks = () => {\n  const {\n    categoryName\n  } = useParams();\n\n  // Find the matching category key, ignoring case\n  const matchingCategory = Object.keys(BooksData).find(category => category.toLowerCase() === categoryName.toLowerCase());\n  const books = matchingCategory ? BooksData[matchingCategory] : [];\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"py-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center mb-5\",\n    style: {\n      color: '#333',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Books in \", categoryName.charAt(0).toUpperCase() + categoryName.slice(1)), /*#__PURE__*/React.createElement(Row, {\n    xs: 1,\n    sm: 2,\n    md: 3,\n    lg: 4,\n    xl: 6,\n    className: \"g-4 mx-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, books.length > 0 ? books.map(book => /*#__PURE__*/React.createElement(Col, {\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BookCard, {\n    category: matchingCategory,\n    book: book,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    style: {\n      color: '#666'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"No books available in this category.\"))));\n};\nexport default CategoryBooks;","map":{"version":3,"names":["React","useParams","Container","Row","Col","BookCard","BooksData","CategoryBooks","categoryName","matchingCategory","Object","keys","find","category","toLowerCase","books","createElement","fluid","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontWeight","charAt","toUpperCase","slice","xs","sm","md","lg","xl","length","map","book","key","id"],"sources":["/home/abdennacer/Desktop/library-project/src/pages/CategoryBooks.jsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport BookCard from '../components/BookCard';\nimport BooksData from '../books.json';\n\nconst CategoryBooks = () => {\n  const { categoryName } = useParams();\n  \n  // Find the matching category key, ignoring case\n  const matchingCategory = Object.keys(BooksData).find(\n    category => category.toLowerCase() === categoryName.toLowerCase()\n  );\n\n  const books = matchingCategory ? BooksData[matchingCategory] : [];\n\n  return (\n    <Container fluid className=\"py-5\">\n      <h1 className=\"text-center mb-5\" style={{ color: '#333', fontWeight: 'bold' }}>\n        Books in {categoryName.charAt(0).toUpperCase() + categoryName.slice(1)}\n      </h1>\n      <Row xs={1} sm={2} md={3} lg={4} xl={6} className=\"g-4 mx-4\">\n        {books.length > 0 ? (\n          books.map((book) => (\n            <Col key={book.id}>\n              <BookCard category={matchingCategory} book={book} />\n            </Col>\n          ))\n        ) : (\n          <Col>\n            <p className=\"text-center\" style={{ color: '#666' }}>No books available in this category.</p>\n          </Col>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default CategoryBooks;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,eAAe;AAErC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAM;IAAEC;EAAa,CAAC,GAAGP,SAAS,CAAC,CAAC;;EAEpC;EACA,MAAMQ,gBAAgB,GAAGC,MAAM,CAACC,IAAI,CAACL,SAAS,CAAC,CAACM,IAAI,CAClDC,QAAQ,IAAIA,QAAQ,CAACC,WAAW,CAAC,CAAC,KAAKN,YAAY,CAACM,WAAW,CAAC,CAClE,CAAC;EAED,MAAMC,KAAK,GAAGN,gBAAgB,GAAGH,SAAS,CAACG,gBAAgB,CAAC,GAAG,EAAE;EAEjE,oBACET,KAAA,CAAAgB,aAAA,CAACd,SAAS;IAACe,KAAK;IAACC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BxB,KAAA,CAAAgB,aAAA;IAAIE,SAAS,EAAC,kBAAkB;IAACO,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAO,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WACpE,EAAChB,YAAY,CAACoB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGrB,YAAY,CAACsB,KAAK,CAAC,CAAC,CACnE,CAAC,eACL9B,KAAA,CAAAgB,aAAA,CAACb,GAAG;IAAC4B,EAAE,EAAE,CAAE;IAACC,EAAE,EAAE,CAAE;IAACC,EAAE,EAAE,CAAE;IAACC,EAAE,EAAE,CAAE;IAACC,EAAE,EAAE,CAAE;IAACjB,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzDT,KAAK,CAACqB,MAAM,GAAG,CAAC,GACfrB,KAAK,CAACsB,GAAG,CAAEC,IAAI,iBACbtC,KAAA,CAAAgB,aAAA,CAACZ,GAAG;IAACmC,GAAG,EAAED,IAAI,CAACE,EAAG;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChBxB,KAAA,CAAAgB,aAAA,CAACX,QAAQ;IAACQ,QAAQ,EAAEJ,gBAAiB;IAAC6B,IAAI,EAAEA,IAAK;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChD,CACN,CAAC,gBAEFxB,KAAA,CAAAgB,aAAA,CAACZ,GAAG;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACFxB,KAAA,CAAAgB,aAAA;IAAGE,SAAS,EAAC,aAAa;IAACO,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,sCAAuC,CACzF,CAEJ,CACI,CAAC;AAEhB,CAAC;AAED,eAAejB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}